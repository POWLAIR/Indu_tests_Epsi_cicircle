version: 2.1

orbs:
  node: circleci/node@5
  docker: circleci/docker@2

executors:
  node-executor:
    docker:
      - image: node:18-bullseye
    working_directory: ~/project

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: "Install dependencies"
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: "Linting code"
          command: npm run lint
      - run:
          name: "Build project"
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .next
            - public

  test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - attach_workspace:
          at: ~/project
      - run:
          name: "Install test dependencies"
          command: |
            npm install --save-dev jest @testing-library/react @testing-library/jest-dom jest-environment-jsdom
      - run:
          name: "Run tests"
          command: npm run test:ci

  docker-build:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/project
      - run:
          name: "Build and tag Docker image"
          command: |
            docker build --cache-from powlker/circleci:latest -t powlker/circleci:$CIRCLE_SHA1 .
      - run:
          name: "Login to Docker Hub"
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: "Push Docker image"
          command: |
            docker push powlker/circleci:$CIRCLE_SHA1

  deploy_vercel:
    executor: node-executor
    parameters:
      vercel_scope:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Install Vercel CLI"
          command: npm install -g vercel
      - run:
          name: "Deploy to Vercel"
          command: |
            DEPLOY_URL=$(vercel --token $VERCEL_TOKEN --prod)
            echo "Deployment URL: $DEPLOY_URL"
            sleep 15
            curl -H "Authorization: Bearer $VERCEL_TOKEN" -f $DEPLOY_URL || echo "⚠️ Warning: Unable to access deployment URL, but continuing."

  deploy_production:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Check Node.js version"
          command: node -v
      - run:
          name: "Install latest Node.js"
          command: |
            apk add --update nodejs npm
            npm install -g n
            n latest
      - run:
          name: "Reinstall Vercel CLI"
          command: |
            npm uninstall -g vercel
            npm install -g vercel
      - run:
          name: "Login to Docker Hub"
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: "Push Docker image as latest"
          command: |
            docker pull powlker/circleci:$CIRCLE_SHA1
            docker tag powlker/circleci:$CIRCLE_SHA1 powlker/circleci:latest
            docker push powlker/circleci:latest
      - run:
          name: "Deploy to production"
          command: |
            vercel --token $VERCEL_TOKEN --prod --scope powlker
            echo "Production deployed"

workflows:
  version: 2

  feature-workflow:
    jobs:
      - test:
          filters:
            branches:
              only: /^feature\/.*/

  develop-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - docker-build:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy_vercel:
          name: deploy_vercel_dev
          requires:
            - docker-build
          vercel_scope: "powlker"
          filters:
            branches:
              only: develop

  integration-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: integration
      - test:
          requires:
            - build
          filters:
            branches:
              only: integration
      - docker-build:
          requires:
            - test
          filters:
            branches:
              only: integration
      - deploy_vercel:
          name: deploy_vercel_integration
          requires:
            - docker-build
          vercel_scope: "powlker"
          filters:
            branches:
              only: integration

  production-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - docker-build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy_production:
          requires:
            - docker-build
          filters:
            branches:
              only: master
