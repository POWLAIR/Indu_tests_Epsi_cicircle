version: 2.1

orbs:
  node: circleci/node@5
  docker: circleci/docker@2

executors:
  node-executor:
    docker:
      - image: node:18-bullseye
    working_directory: ~/project

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: "Install dependencies"
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: "Linting code"
          command: npm run lint
      - run:
          name: "Build project"
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .next
            - public

  test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - attach_workspace:
          at: ~/project
      - run:
          name: "Run tests"
          command: |
            npm install
            npm run test:ci

  docker-build:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Build and tag Docker image"
          command: |
            docker build --cache-from monrepo/monapp:latest -t monrepo/monapp:$CIRCLE_SHA1 .
      - run:
          name: "Login to Docker Hub"
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: "Push Docker image"
          command: docker push monrepo/monapp:$CIRCLE_SHA1

  deploy_vercel:
    executor: node-executor
    parameters:
      vercel_scope:
        type: string
    steps:
      - checkout
      - run:
          name: "Deploy to Vercel"
          command: |
            DEPLOY_URL=$(vercel --token $VERCEL_TOKEN --prod --scope << parameters.vercel_scope >>)
            echo "Deployment URL: $DEPLOY_URL"
            curl -f $DEPLOY_URL || (echo "‚ùå Vercel Deployment Failed" && exit 1)

workflows:
  version: 2

  feature-workflow:
    jobs:
      - test:
          filters:
            branches:
              only:
                - /^feature\/.*/

  develop-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - docker-build:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy_vercel:
          name: deploy_vercel_dev
          requires:
            - docker-build
          vercel_scope: "development"
          filters:
            branches:
              only: develop

  integration-workflow:
    jobs:
      - build:
          filters:
            branches:
              only: integration
      - test:
          requires:
            - build
